(function() {
 
  const slider		 = document.querySelector(".content__slider"),
  			control    = document.querySelectorAll(".content__slide"),
  			prev 		   = slider.querySelector(".content__prev"),
  			next       = slider.querySelector(".content__next"),
  			sliderIMG  = slider.querySelector(".content__slideIMG"),
  			imgAmount  = sliderIMG.querySelectorAll("img").length,
  			slideWidth = sliderIMG.clientWidth;
  			
  let widthCounter = 0;
  let slideCounter = 0;
  
  prev.style.display = "none";
  
  next.addEventListener("click", slideRight);
  prev.addEventListener("click", slideLeft);
  
  const checkFirstSlide = (cWidth, sWidth, p) => 
  	cWidth >= -sWidth ? p.style.display = "none" : 0
  
  const checkLastSlide = (cWidth, sWidth, sAmount, n) => 
  	cWidth <= -sWidth * (sAmount - 2) ? n.style.display = "none" : 0
  
  const displayArrow = arrow => {
 		if(arrow.style.display === "none") 
 			arrow.style.display = "flex"
  }
 
  const scroll = width => sliderIMG.style.left = `${widthCounter += width}px`
  
  function slideLeft() {
  	checkFirstSlide(widthCounter, slideWidth, prev);
 		displayArrow(next);
 		scroll(slideWidth);
 
  // selecting img number
  	control[slideCounter].classList.remove("selectedSlide");
  	slideCounter--;
 		control[slideCounter].classList.add("selectedSlide");
  }
	
  control[0].classList.add("selectedSlide");
  function slideRight() {
  	checkLastSlide(widthCounter, slideWidth, imgAmount, next);
 	  displayArrow(prev);
 	  scroll(-slideWidth);
 	
 	// selecting img number
  	slideCounter++;
  	control[slideCounter].classList.add("selectedSlide");
  	control[--slideCounter].classList.remove("selectedSlide");
 	  slideCounter++;
  } 
 
})();
const carousel 			= document.querySelector(".main__gallery"),
			prevButton 		= carousel.querySelector(".prev"),
			nextButton 		= carousel.querySelector(".next"),
			carouselBlock = carousel.querySelector(".gallery__imgs"),
			carouselWrap 	= carousel.querySelector(".gallery__wrap"),
			scrolWidth 		= carouselWrap.offsetWidth,
			imgWidth 			= carousel.querySelector("img").clientWidth;
			fullSize 			= carouselBlock.offsetWidth;
let	allSlides 			= carousel.querySelectorAll("img");

prevButton.addEventListener("click", slideL);
nextButton.addEventListener("click", slideR);

const parsePX = elem => elem === "" ? 0 : parseFloat(elem)

const insertSlides = () => {
	allSlides.forEach(element => carouselBlock.appendChild(element.cloneNode()));
	allSlides.forEach(element => carouselBlock.insertBefore(element.cloneNode(), allSlides[0]));
}

const takeSlidesWidth = slides => slides.length * slides[0].offsetWidth;

const incrementPos = value => parsePX(carouselBlock.style.left) + value;

const transformX = width => carouselBlock.style.left = `${incrementPos(width)}px`

//const checkPos = pos => takeSlidesWidth(docum

const initialWidth = takeSlidesWidth(allSlides);
insertSlides(false);

function slideR() {
	const counter = transformX(-allSlides[0].offsetWidth);
	console.log(counter, takeSlidesWidth(carousel.querySelectorAll("img")) );

	if(parsePX(counter) < -takeSlidesWidth(carousel.querySelectorAll("img")) + carouselWrap.offsetWidth) {
		carouselBlock.style.transition = "null";
		transformX(initialWidth + allSlides[0].offsetWidth);
		setTimeout(() => {
			carouselBlock.style.transition = "left 0.5s";
			transformX(-allSlides[0].offsetWidth)
		}, 5)
	}
}

function slideL() {
	const counter = transformX(allSlides[0].offsetWidth);

	if(parsePX(counter) > 0) {
		carouselBlock.style.transition = "null";
		transformX(-initialWidth - allSlides[0].offsetWidth);
		setTimeout(() => {
			carouselBlock.style.transition = "left 0.5s";
			transformX(allSlides[0].offsetWidth)
		}, 5)
	}
}